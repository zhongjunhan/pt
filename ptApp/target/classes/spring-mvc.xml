<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/aop
           				http://www.springframework.org/schema/aop/spring-aop-3.2.xsd ">
	
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.pt.controller" />
	<!-- 注册mapping,class信息等... -->
	<mvc:annotation-driven/>
	
	<!-- 开启aop -->
	<aop:aspectj-autoproxy/>
	
	<!-- 开启拦截器 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0" />
            <property name="useExpiresHeader" value="true" />
            <property name="useCacheControlHeader" value="true" />
            <property name="useCacheControlNoStore" value="true" />
            <property name="alwaysUseFullPath" value="true" />
        </bean>
	
<!-- 		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/logout"/>
			<mvc:exclude-mapping path="/image/**"/>
	        <bean class="com.pt.interceptor.InitInterceptor"></bean>
        </mvc:interceptor> -->
	</mvc:interceptors>
	
	<bean id="contentNegotiatingViewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1" />
        <!-- 用于开启 /userinfo/123?format=json 的支持 默认是true -->
        <property name="favorParameter" value="false" />
        <!-- 用于关闭 /userinfo/123.json 的支持 默认是true -->
        <property name="favorPathExtension" value="true" />
        <!-- 设置为true以忽略对Accept Header的支持 -->
        <property name="ignoreAcceptHeader" value="true" />
        <!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
        <property name="defaultContentType" value="text/html" />
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
            </map>
        </property>
        <property name="defaultViews">
            <list>
              <ref bean="jsonView" />
              <ref bean="xmlViewer" />
            </list>
        </property>
    </bean>
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <property name="encoding">
            <!-- <value type="org.codehaus.jackson.JsonEncoding">UTF8</value> -->
            <value type="com.fasterxml.jackson.core.JsonEncoding">UTF8</value>
        </property>
        <property name="extractValueFromSingleKeyModel" value="true"></property>
        <property name="contentType" value="application/json;charset=UTF-8" />
    </bean>
     
    <bean id="xmlViewer" class="org.springframework.web.servlet.view.xml.MarshallingView">
        <constructor-arg>
          <!-- <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> -->
          <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
          </bean>
        </constructor-arg>
        <property name="contentType" value="application/xml;charset=UTF-8" />
    </bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJackson2HttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 

</beans>